{"ast":null,"code":"import _taggedTemplateLiteral from \"E:\\\\Downloads\\\\reactTask\\\\ReactJS-Code-Challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Downloads\\\\reactTask\\\\ReactJS-Code-Challenge\\\\src\\\\components\\\\TodoItem.js\",\n    _templateObject,\n    _templateObject2;\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nvar TodoItem = function TodoItem(_ref) {\n  var text = _ref.text,\n      completed = _ref.completed,\n      onComplete = _ref.onComplete;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    onClick: onComplete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"[\", completed ? 'x' : '  ', \"] \", /*#__PURE__*/React.createElement(Text, {\n    completed: completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 34\n    }\n  }, text)));\n};\n\nvar Wrapper = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background-color: red;\\n  width: 50%;\\n  font-size: 24px;\\n  cursor: pointer;\\n\"])));\nvar Text = styled.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  text-decoration: \", \";\\n\"])), function (props) {\n  return props.completed ? 'line-through' : 'none';\n});\nexport default TodoItem;","map":{"version":3,"sources":["E:/Downloads/reactTask/ReactJS-Code-Challenge/src/components/TodoItem.js"],"names":["React","styled","TodoItem","text","completed","onComplete","Wrapper","p","Text","span","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,SAAT,QAASA,SAAT;AAAA,MAAoBC,UAApB,QAAoBA,UAApB;AAAA,sBACf,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACID,SAAS,GAAG,GAAH,GAAS,IADtB,qBAC6B,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAA7B,CAD7B,CADF,CADe;AAAA,CAAjB;;AAQA,IAAMG,OAAO,GAAGL,MAAM,CAACM,CAAV,wJAAb;AAOA,IAAMC,IAAI,GAAGP,MAAM,CAACQ,IAAV,oGACW,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACN,SAAN,GAAkB,cAAlB,GAAmC,MAAxC;AAAA,CADhB,CAAV;AAIA,eAAeF,QAAf","sourcesContent":["import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst TodoItem = ({ text, completed, onComplete }) => (\r\n  <Wrapper onClick={onComplete}>\r\n    <code>\r\n      [{completed ? 'x' : '  '}] <Text completed={completed}>{text}</Text>\r\n    </code>\r\n  </Wrapper>\r\n)\r\n\r\nconst Wrapper = styled.p`\r\n  background-color: red;\r\n  width: 50%;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Text = styled.span`\r\n  text-decoration: ${props => (props.completed ? 'line-through' : 'none')};\r\n`\r\n\r\nexport default TodoItem\r\n"]},"metadata":{},"sourceType":"module"}